bootdo:
  uploadPath: d:/pddHelp/uploadFiles/
  username:
  password:
  agentId: 100001
logging:
  level:
    root: info
    com.bootdo: debug
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    #url: jdbc:mysql://183.92.32.154:3306/gotoo_zz?useUnicode=true&characterEncoding=utf8
    #username: root
    #password: SJFM21!@#9867
    url: jdbc:mysql://39.100.131.79:3306/daodaoping_dev?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    #url: jdbc:mysql://47.111.188.210:3306/gotoo_wh-ys?useUnicode=true&characterEncoding=utf8
    #username: root
    #password: 1qaz@WSX
    initialSize: 1
    minIdle: 10
    maxActive: 100
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
    host: 39.100.131.79
    port: 6379
    password: jxh1988
    # 连接超时时间（毫秒）
    timeout: 10000
    jedis:
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1

biz:
  generator_preffix:
   user_id: 1001
   fund_id: 2001
   order_id: 3001